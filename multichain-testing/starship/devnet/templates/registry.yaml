{{- if .Values.registry.enabled }}
{{ $listIDs := list }}
{{- range $.Values.chains -}}
{{ $listIDs = .id | append $listIDs }}
{{- end }}
{{ $initParams := dict "chains" $listIDs "port" $.Values.exposer.ports.rest "context" $ }}
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  labels:
    app.kubernetes.io/name: registry
spec:
  clusterIP: None
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: grpc
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    app.kubernetes.io/name: registry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: registry
      app.kubernetes.io/name: registry
  template:
    metadata:
      annotations:
        quality: release
        role: api-gateway
        sla: high
        tier: gateway
      labels:
        app.kubernetes.io/instance: registry
        app.kubernetes.io/type: registry
        app.kubernetes.io/name: registry
        app.kubernetes.io/rawname: registry
        app.kubernetes.io/version: {{ $.Chart.AppVersion }}
    spec:
      {{- include "imagePullSecrets" .Values.registry | indent 6 }}
      initContainers:
        {{- include "devnet.init.wait" $initParams | indent 8 }}
      containers:
        - name: registry
          image: {{ .Values.registry.image }}
          imagePullPolicy: {{ $.Values.images.imagePullPolicy }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: REGISTRY_CHAIN_CLIENT_IDS
              value: "{{ include "devnet.chains.ids" . }}"
            - name: REGISTRY_CHAIN_CLIENT_NAMES
              value: "{{ include "devnet.chains.names" . }}"
            - name: REGISTRY_CHAIN_CLIENT_RPCS
              value: "{{ include "devnet.chains.internal.rpc.addrs" . }}"
            - name: REGISTRY_CHAIN_API_RPCS
              value: "{{ include "devnet.chains.rpc.addrs" . }}"
            - name: REGISTRY_CHAIN_API_GRPCS
              value: "{{ include "devnet.chains.grpc.addrs" . }}"
            - name: REGISTRY_CHAIN_API_RESTS
              value: "{{ include "devnet.chains.rest.addrs" . }}"
            - name: REGISTRY_CHAIN_REGISTRY
              value: "/configs"
            - name: REGISTRY_CHAIN_CLIENT_EXPOSERS
              value: "{{ include "devnet.chains.exposer.addrs" . }}"
          command: [ "registry" ]
          resources:
{{- include "getResourceObject" .Values.registry.resources | indent 12 }}
          volumeMounts:
            {{- range $chain := .Values.chains }}
            - mountPath: /configs/{{ $chain.id }}
              name: registry-configs-{{- include "devnet.chain.name" $chain.id }}
            {{- end }}
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
      volumes:
        {{- range $chain := .Values.chains }}
        - name: registry-configs-{{- include "devnet.chain.name" $chain.id }}
          configMap:
            name: registry-{{- include "devnet.chain.name" $chain.id }}
        {{- end }}
---
{{ $defaultFile := $.Files.Get "defaults.yaml" | fromYaml }}
{{- range $chain := .Values.chains }}
{{ $chain := include "devnet.fullchain" (dict "name" $chain.id "file" $defaultFile "context" $) | fromJson }}
{{ $host := "localhost" }}
{{- if not $.Values.registry.localhost }}
{{ $host := printf "%s-genesis.%s.svc.cluster.local" $chain.hostname $.Release.Namespace }}
{{- end }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-{{ $chain.hostname }}
data:
  assetlist.json: |-
    {
      "$schema": "../assetlist.schema.json",
      {{- if eq $chain.name "custom" }}
      "chain_name": "{{ $chain.id }}",
      {{- else }}
      "chain_name": "{{ $chain.name }}",
      {{- end }}
      {{- if hasKey $chain "assets" }}
      "assets": {{ toJson $chain.assets }}
      {{- else }}
      "assets": [
      {
        "description": "The denom for token {{ $chain.denom }}",
        "base": "{{ $chain.denom }}",
        "name": "{{ $chain.denom }}",
        "display": "{{ $chain.denom }}",
        "symbol": "{{ $chain.denom | upper }}",
        "denom_units": [
          {
            "denom": "{{ $chain.denom }}",
            "exponent": 0
          },
          {
            "denom": "{{ $chain.denom }}",
            "exponent": 6
          }
        ],
        "coingecko_id": "{{ $chain.name }}"
      }
      ]
      {{- end }}
    }
  chain.json: |-
    {
      "$schema": "../chain.schema.json",
      {{- if eq $chain.name "custom" }}
      "chain_name": "{{ $chain.id }}",
      {{- else }}
      "chain_name": "{{ $chain.name }}",
      {{- end }}
      "status": "live",
      "network_type": "devnet",
      "chain_id": "{{ $chain.id }}",
      "pretty_name": "{{ $chain.prettyName }} Devnet",
      "bech32_prefix": "{{ $chain.prefix }}",
      "daemon_name": "{{ $chain.binary }}",
      "node_home": "{{ $chain.home }}",
      "key_algos": [
        "secp256k1"
      ],
      "slip44": "{{ $chain.coinType | int }}",
      "fees": {
        "fee_tokens": [
          {
            "denom": "{{ $chain.denom }}",
            "fixed_min_gas_price": 0,
            "low_gas_price": 0,
            "average_gas_price": 0.025,
            "high_gas_price": 0.04
          }
        ]
      },
      "staking": {
        "staking_tokens": [
          {
            "denom": "{{ $chain.denom }}"
          }
        ],
        "lock_duration": {
          "time": "1209600s"
        }
      },
      "codebase": {
        "git_repo": "{{ $chain.repo }}",
        "compatible_versions": [],
        "binaries": {},
        "ics_enabled": [],
        "versions": [],
        "consensus": {
          "type": "tendermint"
        }
      },
      {{- if $.Values.explorer.enabled }}
      "explorers": [
        {
          "kind": "{{ $.Values.explorer.type }}",
          "url": "http://localhost:{{ $.Values.explorer.ports.rest }}"
        }
      ],
      {{- end }}
      "peers": {
        "seeds": [],
        "persistent_peers": []
      }
    }
---
{{- end }}
{{- end }}
