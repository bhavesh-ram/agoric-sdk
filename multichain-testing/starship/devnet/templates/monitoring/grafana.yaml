{{- if .Values.monitoring.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
data:
  prometheus.yaml: |-
    {
      "apiVersion": 1,
      "datasources": [
        {
          "access":"proxy",
          "editable": true,
          "name": "prometheus",
          "orgId": 1,
          "type": "prometheus",
          "url": "http://prometheus.aws-starship.svc:9090",
          "version": 1
        }
      ]
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-providers
data:
  default.yaml: |-
    {
      "apiVersion": 1,
      "providers": [
        {
          "name": "chain-dashboard",
          "orgId": 1,
          "type": "file",
          "allowUiUpdates": true,
          "options": {
            "path": "/var/lib/grafana/dashboards",
          }
        }
      ]
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
data:
  {{- range $path, $_ := .Files.Glob "configs/grafana-dashboards/*.json" }}
  {{ base $path }}: |-
    {{- $.Files.Get $path | nindent 4}}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port:   '8080'
spec:
  clusterIP: None
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app.kubernetes.io/name: grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  template:
    metadata:
      name: grafana
      labels:
        app.kubernetes.io/instance: monitoring
        app.kubernetes.io/name: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          env:
            - name: GF_SERVER_HTTP_PORT
              value: "8080"
            - name: GF_SERVER_HTTP_ADDR
              value: "0.0.0.0"
            - name: GF_AUTH_DISABLE_LOGIN_FORM
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_NAME
              value: "Main Org."
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: "Editor"
          ports:
            - name: grafana
              containerPort: 3000
          resources:
{{- include "getResourceObject" $.Values.monitoring.resources | indent 12 }}
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-storage
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
              readOnly: false
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboard-providers
              readOnly: false
            - mountPath: /var/lib/grafana/dashboards
              name: grafana-dashboards
              readOnly: false
      volumes:
        - name: grafana-datasources
          configMap:
            defaultMode: 420
            name: grafana-datasources
        - name: grafana-dashboard-providers
          configMap:
            defaultMode: 420
            name: grafana-dashboard-providers
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
        - name: grafana-storage
          emptyDir: { }
---
{{- end }}
